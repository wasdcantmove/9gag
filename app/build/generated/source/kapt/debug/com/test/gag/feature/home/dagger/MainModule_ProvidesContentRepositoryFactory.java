// Generated by Dagger (https://dagger.dev).
package com.test.gag.feature.home.dagger;

import com.test.gag.api.ContentRetrofitApi;
import com.test.gag.feature.home.backend.ContentRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainModule_ProvidesContentRepositoryFactory implements Factory<ContentRepository> {
  private final MainModule module;

  private final Provider<ContentRetrofitApi> apiProvider;

  public MainModule_ProvidesContentRepositoryFactory(MainModule module,
      Provider<ContentRetrofitApi> apiProvider) {
    this.module = module;
    this.apiProvider = apiProvider;
  }

  @Override
  public ContentRepository get() {
    return providesContentRepository(module, apiProvider.get());
  }

  public static MainModule_ProvidesContentRepositoryFactory create(MainModule module,
      Provider<ContentRetrofitApi> apiProvider) {
    return new MainModule_ProvidesContentRepositoryFactory(module, apiProvider);
  }

  public static ContentRepository providesContentRepository(MainModule instance,
      ContentRetrofitApi api) {
    return Preconditions.checkNotNullFromProvides(instance.providesContentRepository(api));
  }
}
